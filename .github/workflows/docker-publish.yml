name: Docker Publish

on:
  workflow_call:
    secrets:
      GH_PAT:
        required: true
      GH_USERNAME:
        required: true
      GH_ORG:
        required: true
      GH_REPO:
        required: false

permissions:
  contents: write
  actions: write

jobs:
  detect-files:
    runs-on: ubuntu-latest
    outputs:
      has_node: ${{ steps.check_node.outputs.has_node }}
      has_python: ${{ steps.check_python.outputs.has_python }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5.0.0
      - name: Check for Node.js files
        id: check_node
        run: |
          if [[ -f "package.json" || -f "package-lock.json" ]]; then
            echo "has_node=true" >> $GITHUB_OUTPUT
          else
            echo "has_node=false" >> $GITHUB_OUTPUT
          fi
      - name: Check for Python files
        id: check_python
        run: |
          if [[ -f "requirements.txt" ]]; then
            echo "has_python=true" >> $GITHUB_OUTPUT
          else
            echo "has_python=false" >> $GITHUB_OUTPUT
          fi

  build-node:
    needs: detect-files
    if: needs.detect-files.outputs.has_node == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5.0.0
      - name: Setup Node.js
        uses: actions/setup-node@v5.0.0
        with:
          node-version: '24'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci || npm install
      # - name: Lint code
      #   run: npm run lint || echo "No lint command configured"
      - name: Prettify code
        uses: creyD/prettier_action@v4.6
        with:
          prettier_options: "--write **/*.{json,css,html}"
          github_token: ${{ secrets.GH_PAT }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Cache Docker layers
        uses: actions/cache@v4.2.4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_PAT }}
      - name: Build and push Docker images (Node.js)
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ secrets.GH_ORG }}/${{ secrets.GH_REPO || github.event.repository.name }}:nodejs-latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          provenance: false
          platforms: linux/amd64
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-python:
    needs: detect-files
    if: needs.detect-files.outputs.has_python == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5.0.0
      - name: Setup Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: "3.x"
      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: Cache pip dependencies
        uses: actions/cache@v4.2.4
        id: pip-cache
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install pip requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || echo "No requirements.txt found"
      - name: Run Python Black
        uses: piotrpawlaczek/python-blacken@v24.4.2
        with:
          line-length: "88"
          path: "."
          sanity-check: "safe"
          only-check: "no"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1
      - name: Cache Docker layers
        uses: actions/cache@v4.2.4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_PAT }}
      - name: Build and push Docker images (Python)
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ secrets.GH_ORG }}/${{ secrets.GH_REPO || github.event.repository.name }}:python-latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          provenance: false
          platforms: linux/amd64
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
