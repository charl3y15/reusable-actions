name: Update Docker Images

on:
  push:
    branches: ["main"]
    paths:
      - "**/*.py"
      - "**/*.html"
      - "package.json"
      - "package-lock.json"
      - "requirements.txt"
      - "Dockerfile"
      - "Pipfile"
      - "Pipfile.lock"
      - ".github/"
      - ".github/**"
      - ".dockerignore"
      - "**.*.style"

  workflow_dispatch:
  schedule: # 2 AM on Monday
    - cron: "0 2 * * 1"

permissions:
  contents: write
  # workflows: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      # Set up Python environment
      - name: Setup Python
        uses: actions/setup-python@v5.5.0
        with:
          python-version: "3.x"

      # Cache pip dependencies
      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip dependencies
        uses: actions/cache@v4.2.3
        id: pip-cache
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install pip requirements
      - name: Install pip requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || echo "No requirements.txt found"

      # Python Black
      - name: Run Python Black
        uses: piotrpawlaczek/python-blacken@v24.4.2
        with:
          line-length: "88"
          path: "."
          sanity-check: "safe"
          only-check: "no"

      - name: Prettify code
        uses: creyD/prettier_action@v4.3
        with:
          prettier_options: "--write **/*.{json,css,html}"
          # working_directory: '/app'
          # same_commit: True
          github_token: ${{ secrets.GH_PAT }}
      # # Install Black and run it
      # - name: Install Black
      #   run: pip install black

      # - name: Run Black
      #   run: python -m black .

      # Continue with existing steps
      - name: Set date as env variable
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      # Improved Docker layer caching
      - name: Cache Docker layers
        uses: actions/cache@v4.2.3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Single login step using docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_PAT }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.15.0
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ secrets.GH_ORG }}/${{ github.event.repository.name }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          provenance: false
          platforms: linux/amd64

      # Clean up cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
